/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontEnd;

import backEnd.CurrentStockManager;
import backEnd.CustomerManager;
import backEnd.HistoricStockManager;
import backEnd.SalesManager;
import backEnd.StockItem;
import backEnd.StockManager;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author muham
 */
public class menuUI extends javax.swing.JFrame
{

    /**
     * Creates new form menuUI
     */
    public menuUI() throws SQLException, ClassNotFoundException
    {
        initComponents();
        this.fillTable();
        this.fillCustomerTable();
        this.fillCurrentStockTable();
        this.fillHistoricStockTable();
        this.stockPicker();
        this.customerPicker();
        this.fillSales();
    }
    private void fillCustomerTable() throws SQLException
    {
        try
        {
            CustomerManager n = new CustomerManager();
            String [] customerHeaders = {"Customer ID","Customer Name", "Amount owed"};
            Object[][] customerData = n.getCustomerForTable();
            DefaultTableModel model = new DefaultTableModel(customerData,customerHeaders);
            customerTbl.setModel(model);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void fillTable() throws SQLException
    {
        try
        {
            StockManager m = new StockManager();
            String [] headers = {"Stock ID","Stock Name","category","Price of stock"};
            Object[][] data = m.getStockForTable();
            DefaultTableModel mod = new DefaultTableModel(data,headers);
            tbl.setModel(mod);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void fillCurrentStockTable() throws SQLException
    {
        try
        {
            CurrentStockManager m = new CurrentStockManager();
            String [] headers = {"Stock ID","Quantity"};
            Object[][] data = m.getStockForCurrentStockTable();
            DefaultTableModel mod = new DefaultTableModel(data,headers);
            tblCurrentStock.setModel(mod);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void fillHistoricStockTable() throws SQLException
    {
        try
        {
            HistoricStockManager h = new HistoricStockManager();
            String [] headers = {"Stock ID","Quantity"};
            Object[][] data = h.getStockForHistoricStokcTable();
            DefaultTableModel mod = new DefaultTableModel(data,headers);
            tblhistoricstock.setModel(mod);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tabbedPanes = new javax.swing.JTabbedPane();
        customerPanel = new javax.swing.JPanel();
        customerListLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        customerNamelabel = new javax.swing.JLabel();
        customerNameInput = new javax.swing.JTextField();
        amountOwedLabel = new javax.swing.JLabel();
        amountOwedInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        deletelabel = new javax.swing.JLabel();
        customerLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTbl = new javax.swing.JTable();
        addCustomer = new javax.swing.JButton();
        deleteCustomerbtn = new javax.swing.JButton();
        getCustomerID = new javax.swing.JTextField();
        stockPanel = new javax.swing.JPanel();
        stockItemLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        stockNametextfield = new javax.swing.JTextField();
        priceLabel = new javax.swing.JLabel();
        priceTextfield = new javax.swing.JTextField();
        stockIDText = new javax.swing.JTextField();
        stockDeletionLabel = new javax.swing.JLabel();
        getCategory = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        quantitylbl = new javax.swing.JLabel();
        getQuantity = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblhistoricstock = new javax.swing.JTable();
        salesPanel = new javax.swing.JPanel();
        saleslabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSales = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCurrentStock = new javax.swing.JTable();
        stockPicker = new javax.swing.JComboBox<>();
        slbl = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        orderOutput = new javax.swing.JTextArea();
        amtOfStock = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        customerPicker = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        orderButton = new javax.swing.JButton();
        menuLabel = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        tabbedPanes.setBackground(new java.awt.Color(204, 204, 255));
        tabbedPanes.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPanes.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tabbedPanesMouseClicked(evt);
            }
        });

        customerPanel.setBackground(new java.awt.Color(204, 204, 255));

        customerListLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        customerListLabel.setText("Customer List");

        customerNamelabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        customerNamelabel.setText("Customer Name");

        customerNameInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        customerNameInput.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                customerNameInputActionPerformed(evt);
            }
        });

        amountOwedLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        amountOwedLabel.setText("Amount Owed");

        amountOwedInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("Add New Customer");

        deletelabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        deletelabel.setText("Delete Existing Customer");

        customerLabel1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        customerLabel1.setText("Customer ID");

        customerTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(customerTbl);

        addCustomer.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        addCustomer.setText("Add customer");
        addCustomer.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addCustomerActionPerformed(evt);
            }
        });

        deleteCustomerbtn.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        deleteCustomerbtn.setText("Delete customer");
        deleteCustomerbtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteCustomerbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(customerListLabel))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel2))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerNamelabel)
                                    .addComponent(amountOwedLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(amountOwedInput, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(customerNameInput)
                                    .addComponent(addCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGap(480, 480, 480)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(customerLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(getCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(deleteCustomerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deletelabel))
                        .addGap(45, 45, 45)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(725, Short.MAX_VALUE))
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addComponent(customerListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(customerNamelabel)
                                    .addComponent(customerNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(amountOwedInput, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amountOwedLabel)))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(deletelabel)
                .addGap(18, 18, 18)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addComponent(deleteCustomerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        tabbedPanes.addTab("Customers", customerPanel);

        stockPanel.setBackground(new java.awt.Color(204, 204, 255));

        stockItemLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        stockItemLabel.setText("Stock Items");

        addButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteButtonActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Stock ID", "Stock Name", "Quantity of stock", "Price of stock"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tbl);

        priceLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        priceLabel.setText("Price");

        stockIDText.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                stockIDTextActionPerformed(evt);
            }
        });

        stockDeletionLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        stockDeletionLabel.setText("Choose the stockID of the stock to be deleted");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel4.setText("Category");

        quantitylbl.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        quantitylbl.setText("Quantity");

        tblhistoricstock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblhistoricstock);

        javax.swing.GroupLayout stockPanelLayout = new javax.swing.GroupLayout(stockPanel);
        stockPanel.setLayout(stockPanelLayout);
        stockPanelLayout.setHorizontalGroup(
            stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stockPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(stockPanelLayout.createSequentialGroup()
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(stockItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantitylbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(35, 35, 35)))
                        .addGap(23, 23, 23)
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(getCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(stockIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(218, 218, 218))
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(getQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stockNametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(stockDeletionLabel)
                                .addContainerGap(360, Short.MAX_VALUE))))))
        );
        stockPanelLayout.setVerticalGroup(
            stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stockPanelLayout.createSequentialGroup()
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stockDeletionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(stockItemLabel)
                                .addComponent(stockNametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stockIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(quantitylbl))
                            .addGroup(stockPanelLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(getQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(stockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(stockPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(402, Short.MAX_VALUE))
        );

        tabbedPanes.addTab("Stock", stockPanel);

        salesPanel.setBackground(new java.awt.Color(204, 204, 255));

        saleslabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        saleslabel.setText("Sales of the Business");

        tblSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblSales);

        tblCurrentStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblCurrentStock);

        stockPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stockPicker.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                stockPickerActionPerformed(evt);
            }
        });

        slbl.setText("Name of stock");

        orderOutput.setColumns(20);
        orderOutput.setRows(5);
        jScrollPane5.setViewportView(orderOutput);

        jLabel3.setText("Amount");

        customerPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        customerPicker.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                customerPickerActionPerformed(evt);
            }
        });

        jLabel5.setText("Customer");

        orderButton.setText("Enter");
        orderButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                orderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout salesPanelLayout = new javax.swing.GroupLayout(salesPanel);
        salesPanel.setLayout(salesPanelLayout);
        salesPanelLayout.setHorizontalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(slbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customerPicker, 0, 131, Short.MAX_VALUE)
                    .addComponent(amtOfStock)
                    .addComponent(stockPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(299, 299, 299))
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(saleslabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        salesPanelLayout.setVerticalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(saleslabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stockPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amtOfStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(orderButton))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(360, Short.MAX_VALUE))
        );

        tabbedPanes.addTab("Sales", salesPanel);

        menuLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        menuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuLabel.setText("MENU");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(700, 700, 700)
                .addComponent(menuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tabbedPanes, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuLabel)
                .addGap(24, 24, 24)
                .addComponent(tabbedPanes))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteButtonActionPerformed
    {//GEN-HEADEREND:event_deleteButtonActionPerformed
        try
        {
            try
            {
                try
                {
                    StockManager t = new StockManager();
                    t.deleteFromDB(Integer.parseInt(stockIDText.getText()));
                    this.fillTable();
                } catch (ClassNotFoundException ex)
                {
                    Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                catch (SQLException ex)
                {
                    Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                CurrentStockManager s = new CurrentStockManager();
                s.deleteFromDB(Integer.parseInt(stockIDText.getText()));
                this.fillCurrentStockTable();
            } catch (ClassNotFoundException ex)
            {
                Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex)
            {
                Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            HistoricStockManager h = new HistoricStockManager();
            h.deleteFromHistoricStock(Integer.parseInt(stockIDText.getText()));
            this.fillHistoricStockTable();
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void customerNameInputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_customerNameInputActionPerformed
    {//GEN-HEADEREND:event_customerNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameInputActionPerformed

    private void tabbedPanesMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tabbedPanesMouseClicked
    {//GEN-HEADEREND:event_tabbedPanesMouseClicked

    }//GEN-LAST:event_tabbedPanesMouseClicked
 
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addButtonActionPerformed
    {//GEN-HEADEREND:event_addButtonActionPerformed
        try
        {
            try
            {
                String stockName = stockNametextfield.getText();
                String category = getCategory.getText();
                int price = Integer.parseInt(priceTextfield.getText());
                StockManager b = new StockManager();
                b.addToStockDB(stockName,category, price);
                this.fillTable();
            } catch (ClassNotFoundException ex)
            {
                Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex)
            {
                Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            int quantity = Integer.parseInt(getQuantity.getText());
            CurrentStockManager m  = new CurrentStockManager();
            m.addToCurrentStock(quantity);
            this.fillCurrentStockTable();
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void stockIDTextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stockIDTextActionPerformed
    {//GEN-HEADEREND:event_stockIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockIDTextActionPerformed

    private void addCustomerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addCustomerActionPerformed
    {//GEN-HEADEREND:event_addCustomerActionPerformed
        try
            {
                String customerName = customerNameInput.getText();
                int amountOwed = Integer.parseInt(amountOwedInput.getText());
                CustomerManager c = new CustomerManager();
                c.addNewCustomer(customerName, amountOwed);
                this.fillCustomerTable();
            } catch (ClassNotFoundException ex)
            {
                Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex)
            {
                Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_addCustomerActionPerformed

    private void deleteCustomerbtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteCustomerbtnActionPerformed
    {//GEN-HEADEREND:event_deleteCustomerbtnActionPerformed
        try
        {
            CustomerManager c = new CustomerManager();;
            c.deleteFromCustomerDB(Integer.parseInt(getCustomerID.getText()));
            this.fillCustomerTable();
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteCustomerbtnActionPerformed

    private void stockPicker()
    {
                try
        {
            StockManager m = new StockManager();
            String [] s = m.getStockNames();
            DefaultComboBoxModel mod = new DefaultComboBoxModel(s);
            stockPicker.setModel(mod);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void customerPicker() 
    {
        try
        {
            CustomerManager m = new CustomerManager();
            String [] s = m.getCustomerName();
            DefaultComboBoxModel mod = new DefaultComboBoxModel(s);
            customerPicker.setModel(mod);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void fillSales() throws SQLException
    {

        try
        {
            SalesManager s = new SalesManager();
            String [] headers = {"Sales ID","Stock Name","Stock Amount","Stock Price","Customer Name"};
            Object[][] data = s.fillSalesTbl();
            DefaultTableModel mod = new DefaultTableModel(data,headers);
            tblSales.setModel(mod);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void stockPickerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stockPickerActionPerformed
    {//GEN-HEADEREND:event_stockPickerActionPerformed

    }//GEN-LAST:event_stockPickerActionPerformed

    private void customerPickerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_customerPickerActionPerformed
    {//GEN-HEADEREND:event_customerPickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerPickerActionPerformed

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_orderButtonActionPerformed
    {//GEN-HEADEREND:event_orderButtonActionPerformed
        try
        {
            orderOutput.setText("ORDER:" + "\n" + "Stock Name: " + stockPicker.getSelectedItem().toString() + ""
                    + " \n" + "Stock Amount: " + amtOfStock.getValue().toString() + ""
                            + "\n" + "Customer Name: " + customerPicker.getSelectedItem().toString() + ""
                                    + "\n" + "Price: " + amtOfStock.getValue().toString());
            
            String stockName = stockPicker.getSelectedItem().toString();
            int stockAmount = (int) amtOfStock.getValue();
            int price = 0;
            String customerName = customerPicker.getSelectedItem().toString();
            SalesManager s = new SalesManager();
            s.addToSalesDB(stockName, stockAmount, price, customerName);
            this.fillSales();
        } catch (SQLException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(menuUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_orderButtonActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addCustomer;
    private javax.swing.JTextField amountOwedInput;
    private javax.swing.JLabel amountOwedLabel;
    private javax.swing.JSpinner amtOfStock;
    private javax.swing.JLabel customerLabel1;
    private javax.swing.JLabel customerListLabel;
    private javax.swing.JTextField customerNameInput;
    private javax.swing.JLabel customerNamelabel;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JComboBox<String> customerPicker;
    private javax.swing.JTable customerTbl;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteCustomerbtn;
    private javax.swing.JLabel deletelabel;
    private javax.swing.JTextField getCategory;
    private javax.swing.JTextField getCustomerID;
    private javax.swing.JTextField getQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JButton orderButton;
    private javax.swing.JTextArea orderOutput;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextfield;
    private javax.swing.JLabel quantitylbl;
    private javax.swing.JPanel salesPanel;
    private javax.swing.JLabel saleslabel;
    private javax.swing.JLabel slbl;
    private javax.swing.JLabel stockDeletionLabel;
    private javax.swing.JTextField stockIDText;
    private javax.swing.JLabel stockItemLabel;
    private javax.swing.JTextField stockNametextfield;
    private javax.swing.JPanel stockPanel;
    private javax.swing.JComboBox<String> stockPicker;
    private javax.swing.JTabbedPane tabbedPanes;
    private javax.swing.JTable tbl;
    private javax.swing.JTable tblCurrentStock;
    private javax.swing.JTable tblSales;
    private javax.swing.JTable tblhistoricstock;
    // End of variables declaration//GEN-END:variables
}
